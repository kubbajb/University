#długość próby
lengths <- seq(12, 22, by = 2)
#ramka danych z każda możliwa 3 z tych wartości
params <- expand.grid(df = dfs, alpha = alphas, length = lengths)
#stopnie swobody
dfs <- seq(1, 11, by = 1)
#ramka danych z każda możliwa 3 z tych wartości
params <- expand.grid(df = dfs, alpha = alphas, length = lengths)
#wyświetlanie
View(params)
#ustawiamy ziarno generatora na 20
sed.seed(20)
#dla każdej 3 liczymy moc testu
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
shapiro.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
shapiro_df <- bind_cols(params, power = powers)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
ks.test(my_sample, pnorm)$p.value
})
mean(p_vector < alpha)
})
kolmogorow_df <- bind_cols(params, power = powers)
kolmogorow_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot(shapiro.test, aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot("shapiro.test", aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot("shapiro.test", aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
lans(title = "Shapiro-Wilk")
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Shapiro-Wilk") +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Shapiro-Wilk") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
kolmogorow_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Kołmogorowa-Smirnowa") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
#Jarque-Bera
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
jarque.bera.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
jarque_df <- bind_cols(params, power = powers)
jarque_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Jarque-Bera") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
typeof(aplhas)
typeof(alphas)
class(alphas)
#stopnie swobody
dfs <- 1:11
#stopnie swobody
dfs <- seq(1, 11, by = 1)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tseries)
#ilość symulacji
N <- 1000
#stopnie swobody
dfs <- seq(1, 11, by = 1)
#poziomy istotności
alphas <- c(.02, .05, .1, .2)
#długość próby
lengths <- seq(12, 22, by = 2)
#ramka danych z każda możliwa 3 z tych wartości
params <- expand.grid(df = dfs, alpha = alphas, length = lengths)
#dla każdej 3 liczymy moc testu
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
shapiro.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
shapiro_df <- bind_cols(params, power = powers)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Shapiro-Wilka") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
ks.test(my_sample, pnorm)$p.value
})
mean(p_vector < alpha)
})
kolmogorow_df <- bind_cols(params, power = powers)
kolmogorow_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Kołmogorowa-Smirnowa") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
jarque.bera.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
jarque_df <- bind_cols(params, power = powers)
jarque_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Jarque-Bera") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_wide <-
shapiro_df %>%
spread(length, power)
kolmogorow_wide <-
kolmogorow_df %>%
spread(length, power)
jarque_wide <-
jarque_df %>%
spread(length, power)
shapiro_wide %>%
ggplot(aes(x = df, y = `16`, col = factor(alpha))) +
geom_line()
all_wide <- bind_cols(shapiro_df, nazwa = "shapiro")
all_wide <- expand.grid(shapiro_df, nazwa = "shapiro")
View(all_wide)
View(jarque_wide)
all_wide <- expand.grid(shapiro_wide, nazwa = "shapiro")
View(all_wide)
View(jarque_df)
View(all_wide)
View(all_wide)
View(all_wide)
View(shapiro_df)
View(shapiro_wide)
shapiro_wide <- shapiro_wide[,c(1,2,5)]
View(shapiro_wide)
kolmogorow_wide <- kolmogorow_wide[, c(1,2,5)]
jarque_wide <- jarque_wide[, c(1,2,5)]
all_wide <- expand.grid(shapiro_wide, name = "Shapiro")
View(all_wide)
View(all_wide)
all_wide <- expand.grid(shapiro_wide)
View(all_wide)
all_wide <- bind_rows(kolmogorow_wide)
all_wide <- bind_rows(jarque_wide)
View(all_wide)
all_wide <- expand.grid(shapiro_wide)
all_wide <- bind_rows(kolmogorow_wide)
shapiro_wide <- shapiro_wide[, c(1,2,5)]
kolmogorow_wide <- kolmogorow_wide[, c(1,2,5)]
jarque_wide <- jarque_wide[, c(1,2,5)]
View(shapiro_wide)
all_wide <- expand.grid(shapiro_wide)
all_wide <- bind_cols(name = "shapiro")
View(all_wide)
all_wide <- bind_cols(all_wide, name = "shapiro")
all_wide <- expand.grid(shapiro_wide)
all_wide <- expand.grid(shapiro_wide)
View(all_wide)
shapiro_wide$name <- "Shapiro"
View(shapiro_wide)
kolmogorow_wide$name <- "Kolmogorowa-Smirnowa"
jarque_wide$name <- "Jarque-Bera"
View(shapiro_df)
all_wide <- data.frame(shapiro_wide)
all_wide <- bind_rows(kolmogorow_wide)
all_wide <- bind_rows(jarque_wide)
View(all_wide)
all_wide <- data.frame(shapiro_wide)
all_wide <- rbind(kolmogorow_wide)
all_wide <- bind_rows(jarque_wide)
all_wide <- rbind(kolmogorow_wide)
View(all_wide)
all_wide <- data.frame(shapiro_wide)
all_wide <- rbind(all_wide, kolmogorow_wide)
View(all_wide)
View(jarque_wide)
View(kolmogorow_wide)
View(shapiro_wide)
shapiro_wide$name <- "Shapiro"
kolmogorow_wide$name <- "Kolmogorowa"
jarque_wide$name <- "Jarque-Bera"
View(jarque_wide)
View(kolmogorow_wide)
View(shapiro_wide)
View(all_wide)
all_wide$X16 <- "16"
all_wide <- rbind(all_wide, kolmogorow_wide)
View(all_wide)
colnames(all_wide)[3] = 16
all_wide <- data.frame(shapiro_wide)
colnames(all_wide)[3] = 16
View(all_wide)
all_wide <- rbind(all_wide, kolmogorow_wide)
all_wide <- data.frame(shapiro_wide)
colnames(all_wide)[3] = 16
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
View(all_wide)
all_wide %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ name, nrow = 2)
all_wide %>%
ggplot(aes(x = df, y = 16, color = factor(length), FUN = mean)) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ name, nrow = 3)
View(jarque_wide)
shapiro_wide <-
shapiro_df %>%
spread(length, power)
kolmogorow_wide <-
kolmogorow_df %>%
spread(length, power)
jarque_wide <-
jarque_df %>%
spread(length, power)
View(jarque_wide)
shapiro_wide <- shapiro_wide[which(shapiro_wide[,2] == .05), c(1,2,5)]
View(shapiro_wide)
shapiro_wide$name <- "Shapiro"
kolmogorow_wide <- kolmogorow_wide[which(kolmogorow_wide[,2] == .05), c(1,2,5)]
kolmogorow_wide$name <- "Kolmogorowa"
jarque_wide <- jarque_wide[which(kolmogorow_wide[,2] == .05), c(1,2,5)]
jarque_wide$name <- "Jarque-Bera"
View(jarque_df)
View(jarque_wide)
jarque_wide <-
jarque_df %>%
spread(length, power)
jarque_wide <- jarque_wide[which(jarque_wide[,2] == .05), c(1,2,5)]
all_wide <- data.frame(shapiro_wide)
colnames(all_wide)[3] = 16
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
View(all_wide)
View(kolmogorow_wide)
View(shapiro_wide)
View(jarque_wide)
jarque_wide$name <- "Jarque-Bera"
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
all_wide %>%
ggplot(aes(x = df, y = 16, color = factor(name), FUN = mean)) +
labs(title = "Porównanie wyników 3 testów dla alpha = 5% i dlugości = 16") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
#facet_wrap(~ name, nrow = 3)
#jak zmienia się moc gdy alfa wynosi 0.1
shapiro_long <-
shapiro_wide %>%
gather(length, power, -alpha, -df) %>%
mutate(length = as.integer(length))
all_wide %>%
ggplot(aes(x = df, y = 16, color = factor(name), FUN = mean)) +
labs(title = "Porównanie wyników 3 testów dla alpha = 5% i dlugości = 16") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
all_wide %>%
ggplot(aes(x = df, y = 16, color = factor(name))) +
labs(title = "Porównanie wyników 3 testów dla alpha = 5% i dlugości = 16") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
all_wide %>%
ggplot(aes(x = df, y = 16, color = factor(name))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
all_wide %>%
ggplot(aes(x = df, y = "16", color = factor(name))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
colnames(all_wide)[3] = power
colnames(all_wide)[3] = "power"
all_wide %>%
ggplot(aes(x = df, y = power, color = factor(name))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
unlink('Lab1Mark_cache', recursive = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tseries)
#ilość symulacji
N <- 1000
#stopnie swobody
dfs <- seq(1, 11, by = 1)
#poziomy istotności
alphas <- c(.02, .05, .1, .2)
#długość próby
lengths <- seq(12, 22, by = 2)
#ramka danych z każda możliwa 3 z tych wartości
params <- expand.grid(df = dfs, alpha = alphas, length = lengths)
#ustawiamy ziarno generatora na 20
sed.seed(20)
#dla każdej 3 liczymy moc testu
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
shapiro.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
library(tidyr)
library(dplyr)
library(ggplot2)
library(tseries)
#ilość symulacji
N <- 1000
#stopnie swobody
dfs <- seq(1, 11, by = 1)
#poziomy istotności
alphas <- c(.02, .05, .1, .2)
#długość próby
lengths <- seq(12, 22, by = 2)
#ramka danych z każda możliwa 3 z tych wartości
params <- expand.grid(df = dfs, alpha = alphas, length = lengths)
#ustawiamy ziarno generatora na 20
set.seed(20)
#dla każdej 3 liczymy moc testu
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
shapiro.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
shapiro_df <- bind_cols(params, power = powers)
shapiro_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Shapiro-Wilka") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
#Kolmogorow
set.seed(20)
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
ks.test(my_sample, pnorm)$p.value
})
mean(p_vector < alpha)
})
kolmogorow_df <- bind_cols(params, power = powers)
kolmogorow_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Kołmogorowa-Smirnowa") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
#Jarque-Bera
set.seed(20)
powers <- sapply(1:nrow(params),
function(i){
df <- params[i, 1]
alpha <- params[i, 2]
n <- params[i, 3]
p_vector <- sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
jarque.bera.test(my_sample)$p.value
})
mean(p_vector < alpha)
})
jarque_df <- bind_cols(params, power = powers)
jarque_df %>%
ggplot(aes(x = df, y = power, color = factor(length))) +
labs(title = "Test Jarque-Bera") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line() +
facet_wrap(~ alpha, nrow = 2)
shapiro_wide <-
shapiro_df %>%
spread(length, power)
kolmogorow_wide <-
kolmogorow_df %>%
spread(length, power)
jarque_wide <-
jarque_df %>%
spread(length, power)
shapiro_wide <- shapiro_wide[which(shapiro_wide[,2] == .05), c(1,2,5)]
shapiro_wide$name <- "Shapiro"
kolmogorow_wide <- kolmogorow_wide[which(kolmogorow_wide[,2] == .05), c(1,2,5)]
kolmogorow_wide$name <- "Kolmogorowa"
jarque_wide <- jarque_wide[which(jarque_wide[,2] == .05), c(1,2,5)]
jarque_wide$name <- "Jarque-Bera"
all_wide <- data.frame(shapiro_wide)
colnames(all_wide)[3] = "power"
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
all_wide %>%
ggplot(aes(x = df, y = power, color = factor(name))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
View(all_wide)
all_wide <- data.frame(shapiro_wide)
colnames(all_wide)[3] = "power"
View(all_wide)
all_wide <- data.frame(shapiro_wide)
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
shapiro_wide <-
shapiro_df %>%
spread(length, power)
kolmogorow_wide <-
kolmogorow_df %>%
spread(length, power)
jarque_wide <-
jarque_df %>%
spread(length, power)
shapiro_wide <- shapiro_wide[which(shapiro_wide[,2] == .05), c(1,2,5)]
shapiro_wide$name <- "Shapiro"
colnames(shapiro_wide)[3] = "power"
kolmogorow_wide <- kolmogorow_wide[which(kolmogorow_wide[,2] == .05), c(1,2,5)]
kolmogorow_wide$name <- "Kolmogorowa"
colnames(kolmogorow_wide)[3] = "power"
jarque_wide <- jarque_wide[which(jarque_wide[,2] == .05), c(1,2,5)]
jarque_wide$name <- "Jarque-Bera"
colnames(jarque_wide)[3] = "power"
View(jarque_df)
all_wide <- data.frame(shapiro_wide)
#colnames(all_wide)[3] = "power"
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
View(all_wide)
colnames(shapiro_wide, kolmogorow_wide, jarque_wide)[3] = "power"
all_wide <- data.frame(shapiro_wide)
#colnames(all_wide)[3] = "power"
all_wide <- rbind(all_wide, kolmogorow_wide, jarque_wide)
all_wide %>%
ggplot(aes(x = df, y = power, color = factor(name))) +
labs(title = "Porównanie wyników 3 testów") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_line()
