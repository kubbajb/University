samples <- tibble(p = p_sim, n = n)
source('D:/NAUKA/IIE/IV Semestr/MNwS/Lab1/zajecia/skrypt_1.1.R')
set.seed(1)
tmp <- rnorm(20)
set.seed(1)
tmp <- rnorm(20)
?t.test
t.test(tmp)
tmp <- rnorm(20, 1)
tmp <- rnorm(20)
tmp <- rnorm(20, 1)
t.test(tmp)
t.test(tmp) %>% str()
t.test(tmp)$p.value
#długość próby
sample_l <- 20
#poziom istotności
alpha <- 0.05
#wartość oczekiwana
mu <- .2
#ilość symulacji
N <- 1000
#wektor p-value dla N symulacji
set.seed(4)
p_vector <- sapply(rep(mu, N), function(x){
my_sample <- rnorm(sample_l, mu)
t.test(my_sample)$p.value
})
head(p_vector)
length(p_vector)
tibble(p = p_vector) %>%
ggplot(aes(x = p)) +
geom_histogram() +
scale_x_log10()
#obliczam moc
mean(p_vector < alpha)
#długość próby
sample_l <- 20
#poziom istotności
alpha <- 0.05
#obliczanie mocy
mean(p_vector < alpha)
sample_df <- tibble(p = 1, mu = 0)
set.seed(5)
for(x in mu){
p_vector <- sapply(rep(x, N), function(x){
my_sample <- rnorm(sample_l, x)
t.test(my_sample)$p.value
})
tmp_df <- tibble(p = p_vector, mu=x)
sample_df <- bind_rows(sample_df, tmp_df)
}
sample_df <- sample_df %>% filter(mu > 0)
glimpse(sample_df) # to samo co str
#
power_df <- sample_df %>%
group_by(mu) %>%
summarise(power = mean(p < alpha))
power_df
power_df %>% ggplot(aes(x = mu, y=power)) +
geom_line()
y
T
wd
F
power_df %>% ggplot(aes(x = mu, y=power)) +
geom_line()
#długość próby
sample_l <- 20
#poziom istotności
alpha <- 0.05
#wartość oczekiwana
mu <- seq(.1, 2, by = .1)
#ilość symulacji
N <- 1000
sample_df <- tibble(p = 1, mu = 0)
set.seed(9)
for(x in mu){
p_vector <- sapply(rep(x, N), function(x){
my_sample <- rnorm(sample_l, x)
t.test(my_sample)$p.value
})
tmp_df <- tibble(p = p_vector, mu = x)
sample_df <- bind_rows(sample_df, tmp_df)
}
sample_df <- sample_df %>% filter(mu > 0)
glimpse(sample_df)
library("dplyr", lib.loc="D:/PROGRAMY/R/R-3.4.2/library")
library("ggplot2", lib.loc="D:/PROGRAMY/R/R-3.4.2/library")
library("EnvStats", lib.loc="D:/PROGRAMY/R/R-3.4.2/library")
power_df <- sample_df %>%
group_by(mu) %>%
summarise(power = mean(p < 0.05))
View(power_df)
power_df
power_df %>%
ggplot(aes(x = mu, y = power)) +
geom_line()
#długość próby
N <- 1000
#stopnie swobody
df <- 3
#poziom istotności
alpha <- 0.05
sample <- dt(N, df)
sample <- dt(x = N, df = degrees)
#stopnie swobody
degrees <- 3
sample <- dt(x = N, df = degrees)
sample
sample <- dt(N, df)
sample <- rt(N, df)
sample_df <- tibble(p = 1, mu = 0)
shapiro.test(sample)
shapiro.test(sample)$p.value
#wektor p-value dla N symulacji
p_vector <- sapply(rep(df, N), function(x){
shapiro.test(rt(N, df))$p.value
})
tibble(p = p_vector) %>%
ggplot(aes(x = p)) +
geom_histogram() +
scale_x_log10()
#obliczam moc
mean(p_vector < alpha)
#stopnie swobody
df <- 30
#wektor p-value dla N symulacji
p_vector <- sapply(rep(df, N), function(x){
shapiro.test(rt(N, df))$p.value
})
tibble(p = p_vector) %>%
ggplot(aes(x = p)) +
geom_histogram() +
scale_x_log10()
#obliczam moc
mean(p_vector < alpha)
#stopnie swobody
df <- 10
#wektor p-value dla N symulacji
p_vector <- sapply(rep(df, N), function(x){
shapiro.test(rt(N, df))$p.value
})
tibble(p = p_vector) %>%
ggplot(aes(x = p)) +
geom_histogram() +
scale_x_log10()
#obliczam moc
mean(p_vector < alpha)
#długość próby
sample_l <- 20
#poziom istotności
alpha <- 0.05
#wartość oczekiwana
mu <- seq(.1, 2, by = .1)
#ilość symulacji
N <- 1000
sample_df <- tibble(p = 1, mu = 0)
set.seed(9)
for(x in mu){
p_vector <- sapply(rep(x, N), function(x){
my_sample <- rnorm(sample_l, x)
t.test(my_sample)$p.value
})
tmp_df <- tibble(p = p_vector, mu = x)
sample_df <- bind_rows(sample_df, tmp_df)
}
library("dplyr", lib.loc="D:/PROGRAMY/R/R-3.4.2/library")
library("ggplot2", lib.loc="D:/PROGRAMY/R/R-3.4.2/library")
sample_df <- tibble(p = 1, mu = 0)
set.seed(9)
for(x in mu){
p_vector <- sapply(rep(x, N), function(x){
my_sample <- rnorm(sample_l, x)
t.test(my_sample)$p.value
})
tmp_df <- tibble(p = p_vector, mu = x)
sample_df <- bind_rows(sample_df, tmp_df)
}
sample_df <- sample_df %>% filter(mu > 0)
glimpse(sample_df)
power_df <- sample_df %>%
group_by(mu) %>%
summarise(power = mean(p < 0.05))
power_df
power_df %>%
ggplot(aes(x = mu, y = power)) +
geom_line()
#długość próby
sample_l <- 100
#długość próby
sample_l <- 100
#stopnie swobody
df <- 3:100
#poziom istotności
alpha <- 0.05
#liczba symulacji
N <- 1000
p_samples <- tibble(p = 1, n = 1)
View(p_samples)
p_samples <- tibble(p = 1, df = 1)
View(p_samples)
for(x in df){
p_sim <- sapply(rep(x, N), function(x){
my_sample <- rt(sample_l, df)
shapiro.test(my_sample)$p.value
})
samples <- tibble(p = p_sim, df = x)
p_samples <- bind_rows(p_samples, samples)
}
p_samples <- p_samples %>% filter(df > 1)
glimpse(p_samples)
powers <- p_samples %>%
group_by(n) %>%
summarise(power = sum(p < alpha) / n())
powers <- p_samples %>%
group_by(df) %>%
summarise(power = sum(p < alpha) / df())
p_sim <- sapply(rep(x, N), function(x){
my_sample <- rt(sample_l, x)
shapiro.test(my_sample)$p.value
})
for(x in df){
p_sim <- sapply(rep(x, N), function(x){
my_sample <- rt(sample_l, x)
shapiro.test(my_sample)$p.value
})
samples <- tibble(p = p_sim, df = x)
p_samples <- bind_rows(p_samples, samples)
}
p_samples <- p_samples %>% filter(df > 1)
glimpse(p_samples)
powers <- p_samples %>%
group_by(df) %>%
summarise(power = sum(p < alpha) / df())
powers <- p_samples %>%
group_by(df) %>%
summarise(power = mean(p < alpha))
powers
powers %>% ggplot(aes(x = df, y = power)) +
geom_line()
#JAK DŁUGOSC PROBY WPŁYWA NA MOC?
sample_l <- 5:100
#stopnie swobody
df <- 3
#poziom istotności
alpha <- 0.05
#liczba symulacji
N <- 1000
p_samples <- tibble(p = 1, n = 1)
for(n in sample_l){
p_sim <-sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
saphiro.test(my_sample)$p.value
})
samples <- tibble(p = p_sim, n = n)
p_samples <- bind_rows(p_samples, samples)
}
p_samples <- p_samples %>% filter(n > 1)
for(n in sample_l){
p_sim <-sapply(rep(df, N), function(x){
my_sample <- rt(n, df)
shapiro.test(my_sample)$p.value
})
samples <- tibble(p = p_sim, n = n)
p_samples <- bind_rows(p_samples, samples)
}
p_samples <- p_samples %>% filter(n > 1)
glimpse(p_samples)
powers <- p_samples %>%
group_by(n) %>%
summarise(power = sum(p < alpha) / n())
powers
powers %>% ggplot(aes(x = n, y = power)) +
geom_line()
sample_l <- 100
#stopnie swobody
df <- 5
#poziom istotności
alpha <- seq(.1, 0.8, by = .1)
#liczba symulacji
N <- 1000
p_samples <- tibble(p = 1, alpha = 1)
glimpse(p_samples)
p_samples <- tibble(p = 1, df = 1)
for(x in df){
p_sim <- sapply(rep(x, N), function(x){
my_sample <- rt(sample_l, x)
shapiro.test(my_sample)$p.value
})
samples <- tibble(p = p_sim, df = x)
p_samples <- bind_rows(p_samples, samples)
}
p_samples <- p_samples %>% filter(df > 1)
glimpse(p_samples)
powers <- p_samples %>%
group_by(df) %>%
summarise(power = mean(p < alpha))
powers
powers %>% ggplot(aes(x = df, y = power)) +
geom_line()
